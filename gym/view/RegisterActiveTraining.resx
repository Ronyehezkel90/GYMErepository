<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="register.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPrev.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        qUo8JqwfGJsMoN+HmpJJJNS//9n/2wBDAAQDAwMDAwQDAwQGBAMEBgcFBAQFBwgGBgcGBggKCAkJCQkI
        CgoMDAwMDAoMDAwMDAwMDAwMDAwMDAwMDAwMDAz/2wBDAQQFBQgHCA8KCg8UDg4OFBQODg4OFBEMDAwM
        DBERDAwMDAwMEQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAuACsDAREAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD7+oAKAM7XdJi13R7/AEeeRoor6CS3aWM7XTzFI3KfUHkVtRqu
        lUjNfZdzGtSVWDg+qsfLvg/45eKfh1q9z4M+IMb6naaXO9nLdDi5i8o4Dc/fRlww9jX6LjMgoY2mq+G9
        xyXNb7P/AANT4XC51VwlR0cQuZRfLf7R9NeHPFWheLNPj1TQL2O9tHAJKN86E9nXqD9a/PcThauHm4VI
        uLPt8PiadePNTd0bOa5jpIbq6t7KCS6u5UgtoVLzTSsERFHUsxwAKqMXJpRV2xSkoq72PBPGn7U/hbSp
        ZbHwdZP4hvIyVN4T5FgGHo5+Z/8AgI/GvsMFwvWqJSrS9mu28/8AgHzWLz2nB8tJc7+6H3njms/tE/FT
        WmcQ6lBo8DfdisIRuUem+TJNfVUOHsFS3i5v+8/0Pm6+dYuezUV/d/4J57qOq6jrN9NqmsXcl9qlyQbi
        8nOZHKjauSMdAMCvfp0oUoqMEoxWyR4dWU6knKTu31L3hvxT4g8Iagup+G757O6BBdFJ8mQejp0OayxW
        FpYmHJVjzL8fvHh8RVw8+anKz/A9s/4ah8SfY/tP9jwZ/s3zN+T5f237X9n83P8Azyx8vp5vFfH/AOq1
        Hmtzv4//ACTl5uT/AK+f+2n1P+slTlvyfZv/ANvc3L9xyX7QvxVvvFvia88HabcNH4S0WU288UbEC8vI
        +JGkI6oh+VV6ZBat8hy2NCkq0l+8nr/hj0sdGa4mVWbpxfux/wDJpHlWg6HrXiXUY9G8OWE2pak4yLa2
        TO1M43OeFRf9piBX0lfEU6MOepJRXd/173yPDhh51HywV2e0aP8Asr/EC9iSXVtS07Sd3WHMl3Kv1KbF
        /ImvmavFOGg7QjKX/kp60MgrSXvNR/E88+I/gdvhx4mXwxLqaapci2juriaOIwrGZWYKhBZs8Luzmvey
        7H/XKPtFHlV+Va3ueNjsF9Wqcl+bS51fwe+DOo/Em4TWNW8yx8ExPh7kZSa+ZTzHAeoTs8v/AAFPbz84
        zqOCThDWr/5LT85f3jry3J5Yl809Kf4zPrf/AIV54K2eV/Ydp5X9nf2Js8sbf7N3+b9nx/d3/P67ua/M
        /r+I/nl8XtN/+Xn833aH3X1Gh/Kvh5P+3P5T83r66f7TfTz/ADTCaeSbPUyb2LZ/Gv16nayS20PkqlPc
        ++PgN4G07wZ8O9JkhiU6xrNvFqOrXuB5kstwodVLddqKQqr2r8tzjGSxGJlf4YvlivQ+rwGHjSpK271Z
        6ga8Y9A+Zrf4Kax8R/ix4l8YePraSw8JQ33k2GnscTajFaqqRk7T8lvxuP8AFJnHFfbPOYYPBU6OHd5t
        XlL+Tm/9uPmP7MeIxMqlXSN9v5rf+2n0naWltY20VnaRJBawKscEEShI0RRgKqjgACvipScm23ds+ljF
        JWWxNSKPgX9of4ZXfgTxpe6xDAT4P8RzPc2dyg/dQXU/zTWshHCktl4s/eDbeq1+mZLj1iKKjf8AeQWv
        nFbSR87jKDhK/Rnvn7MvxYsvE/hi28CatMsXi/w/CII4pDtN5YR8RzR56lFwkij7pG7o1fL55gJUqrqx
        XuT/APJZdUejgq6lHle6Pfq+bPRCgAoAKAMPxf8A8Ir/AMI7f/8ACam0/wCEY8o/2j/aOz7N5f8Atb+P
        p3z0rfD+09ovZX5/s8u5E+XlfNsfGer+Efgff63Z3fwm+IV9pGvPcD+xdP8A7N1S6K3O75fs0iW4nA/G
        Rcf7NffU8RjYwaxNJSjb33zQjp/f1t+R4bp0XK9OTT9GfTXw/vPjDYSQaJ8Q9MstVtguI/FGmXCxMVAy
        Dc2kwjYMfWP8Ur5DGRwkrzoycX/z7kv/AEmaPWpOqtJq/wDeX+R6dXknSFABQB//2Q==
</value>
  </data>
</root>